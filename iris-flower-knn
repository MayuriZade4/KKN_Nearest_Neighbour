## K-Nearest Neighbors (KNN) for Iris Flower Classification Dataset
### Step 1: Import necessary libraries

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import classification_report, confusion_matrix
#load the dataset
df = pd.read_csv('Iris.csv')
df
	Id	SepalLengthCm	SepalWidthCm	PetalLengthCm	PetalWidthCm	Species
0	1	5.1	3.5	1.4	0.2	Iris-setosa
1	2	4.9	3.0	1.4	0.2	Iris-setosa
2	3	4.7	3.2	1.3	0.2	Iris-setosa
3	4	4.6	3.1	1.5	0.2	Iris-setosa
4	5	5.0	3.6	1.4	0.2	Iris-setosa
...	...	...	...	...	...	...
145	146	6.7	3.0	5.2	2.3	Iris-virginica
146	147	6.3	2.5	5.0	1.9	Iris-virginica
147	148	6.5	3.0	5.2	2.0	Iris-virginica
148	149	6.2	3.4	5.4	2.3	Iris-virginica
149	150	5.9	3.0	5.1	1.8	Iris-virginica

df['Species'].unique()
array(['Iris-setosa', 'Iris-versicolor', 'Iris-virginica'], dtype=object)

#creating input and output
df.columns
Index(['Id', 'SepalLengthCm', 'SepalWidthCm', 'PetalLengthCm', 'PetalWidthCm',
       'Species'],
      dtype='object')

#feature engineering
x = df[['SepalLengthCm', 'SepalWidthCm', 'PetalLengthCm', 'PetalWidthCm']]
y = df['Species']

# creating training and testing splits
#Split the data (80% train, 20% test)
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=26)

#create the model
model1 = KNeighborsClassifier(3)

#Trainng KNN_model1
model1.fit(x_train,y_train)
KNeighborsClassifier
?i
KNeighborsClassifier(n_neighbors=3)

#Make predictions
y_pred = model1.predict(x_test)

#Evaluate the model
print(classification_report(y_test,y_pred))
                 precision    recall  f1-score   support

    Iris-setosa       1.00      1.00      1.00        10
Iris-versicolor       0.89      1.00      0.94         8
 Iris-virginica       1.00      0.92      0.96        12

       accuracy                           0.97        30
      macro avg       0.96      0.97      0.97        30
   weighted avg       0.97      0.97      0.97        30


print(confusion_matrix(y_test,y_pred))
[[10  0  0]
 [ 0  8  0]
 [ 0  1 11]]

y_test.value_counts()
	count
Species	
Iris-virginica	12
Iris-setosa	10
Iris-versicolor	8

dtype: int64




